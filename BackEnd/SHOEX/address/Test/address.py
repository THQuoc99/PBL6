import requests
import json

def generate_sample_villages(ward_code, ward_name, count=3):
    """
    T·∫°o d·ªØ li·ªáu m·∫´u cho th√¥n/x√≥m v√¨ API kh√¥ng cung c·∫•p
    Trong th·ª±c t·∫ø, b·∫°n c·∫ßn t√¨m ngu·ªìn d·ªØ li·ªáu kh√°c ho·∫∑c nh·∫≠p th·ªß c√¥ng
    """
    villages = []
    for i in range(1, count + 1):
        villages.append({
            'village_code': f"{ward_code}{i:02d}",
            'village_name': f"Th√¥n {i} - {ward_name}",
            'village_type': 'th√¥n' if 'x√£' in ward_name.lower() else 't·ªï d√¢n ph·ªë'
        })
    return villages

def get_all_data():
    # 1. L·∫•y t·∫•t c·∫£ t·ªânh/th√†nh ph·ªë
    provinces_url = "https://provinces.open-api.vn/api/v2/p/"
    provinces_resp = requests.get(provinces_url)
    provinces = provinces_resp.json()

    full_data = []

    for province in provinces:
        province_id = province['code']
        province_name = province['name']

        # 2. L·∫•y danh s√°ch ph∆∞·ªùng/x√£ c·ªßa t·ªânh (depth=2 ƒë·ªÉ l·∫•y c·∫£ wards)
        province_detail_url = f"https://provinces.open-api.vn/api/v2/p/{province_id}?depth=2"
        province_detail_resp = requests.get(province_detail_url)
        province_detail = province_detail_resp.json()
        
        # L·∫•y danh s√°ch wards t·ª´ province
        wards = province_detail.get('wards', [])
        ward_list = []
        
        for w in wards:
            ward_code = w['code']
            ward_name = w['name']
            
            # T·∫°o d·ªØ li·ªáu m·∫´u cho th√¥n/x√≥m (c√≥ th·ªÉ thay b·∫±ng API th·ª±c n·∫øu c√≥)
            villages = generate_sample_villages(ward_code, ward_name, count=2)
            
            ward_list.append({
                'ward_code': ward_code,
                'ward_name': ward_name,
                'villages': villages
            })

        full_data.append({
            'province_code': province_id,
            'province_name': province_name,
            'wards': ward_list
        })

    return full_data

if __name__ == "__main__":
    print("ƒêang l·∫•y d·ªØ li·ªáu t·∫•t c·∫£ t·ªânh th√†nh v√† ph∆∞·ªùng x√£ Vi·ªát Nam...")
    print("Vui l√≤ng ƒë·ª£i...")
    
    data = get_all_data()

    # L∆∞u v√†o file JSON
    filename = "vietnam_provinces_complete.json"
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    # Th·ªëng k√™
    total_provinces = len(data)
    total_wards = sum(len(province['wards']) for province in data)
    total_villages = sum(
        len(ward['villages']) 
        for province in data 
        for ward in province['wards']
    )
    
    print(f"\n‚úÖ Ho√†n th√†nh!")
    print(f"üìä Th·ªëng k√™:")
    print(f"   - T·ªïng s·ªë t·ªânh/th√†nh ph·ªë: {total_provinces}")
    print(f"   - T·ªïng s·ªë ph∆∞·ªùng/x√£: {total_wards}")
    print(f"   - T·ªïng s·ªë th√¥n/x√≥m (m·∫´u): {total_villages}")
    print(f"üìÅ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o file: {filename}")
    
    # In v√†i t·ªânh ƒë·∫ßu ti√™n ƒë·ªÉ ki·ªÉm tra
    print(f"\nüìù M·ªôt s·ªë t·ªânh/th√†nh ph·ªë ƒë·∫ßu ti√™n:")
    for i, province in enumerate(data[:3]):
        print(f"   {i+1}. {province['province_name']} - {len(province['wards'])} ph∆∞·ªùng/x√£")
        # In v√†i ward ƒë·∫ßu ti√™n
        for j, ward in enumerate(province['wards'][:2]):
            print(f"      - {ward['ward_name']} ({len(ward['villages'])} th√¥n/x√≥m)")
            for village in ward['villages']:
                print(f"        + {village['village_name']}")
    
    if len(data) > 5:
        print(f"   ... v√† {len(data) - 5} t·ªânh/th√†nh ph·ªë kh√°c")
