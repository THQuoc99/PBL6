import requests
import json

def get_all_data():
    # 1. L·∫•y t·∫•t c·∫£ t·ªânh/th√†nh ph·ªë
    provinces_url = "https://provinces.open-api.vn/api/v2/p/"
    provinces_resp = requests.get(provinces_url)
    provinces = provinces_resp.json()

    full_data = []

    for province in provinces:
        province_id = province['code']
        province_name = province['name']

        # 2. L·∫•y danh s√°ch ph∆∞·ªùng/x√£ c·ªßa t·ªânh (depth=2 ƒë·ªÉ l·∫•y c·∫£ wards)
        province_detail_url = f"https://provinces.open-api.vn/api/v2/p/{province_id}?depth=2"
        province_detail_resp = requests.get(province_detail_url)
        province_detail = province_detail_resp.json()
        
        # L·∫•y danh s√°ch wards t·ª´ province
        wards = province_detail.get('wards', [])
        ward_list = [{'ward_code': w['code'], 'ward_name': w['name']} for w in wards]

        full_data.append({
            'province_code': province_id,
            'province_name': province_name,
            'wards': ward_list
        })

    return full_data

if __name__ == "__main__":
    print("ƒêang l·∫•y d·ªØ li·ªáu t·∫•t c·∫£ t·ªânh th√†nh v√† ph∆∞·ªùng x√£ Vi·ªát Nam...")
    print("Vui l√≤ng ƒë·ª£i...")
    
    data = get_all_data()

    # L∆∞u v√†o file JSON
    filename = "vietnam_provinces_complete.json"
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    # Th·ªëng k√™
    total_provinces = len(data)
    total_wards = sum(len(province['wards']) for province in data)
    
    print(f"\n‚úÖ Ho√†n th√†nh!")
    print(f"üìä Th·ªëng k√™:")
    print(f"   - T·ªïng s·ªë t·ªânh/th√†nh ph·ªë: {total_provinces}")
    print(f"   - T·ªïng s·ªë ph∆∞·ªùng/x√£: {total_wards}")
    print(f"üìÅ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o file: {filename}")
    
    # In v√†i t·ªânh ƒë·∫ßu ti√™n ƒë·ªÉ ki·ªÉm tra
    print(f"\nüìù M·ªôt s·ªë t·ªânh/th√†nh ph·ªë ƒë·∫ßu ti√™n:")
    for i, province in enumerate(data[:5]):
        print(f"   {i+1}. {province['province_name']} - {len(province['wards'])} ph∆∞·ªùng/x√£")
    
    if len(data) > 5:
        print(f"   ... v√† {len(data) - 5} t·ªânh/th√†nh ph·ªë kh√°c")
